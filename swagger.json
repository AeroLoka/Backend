{
  "openapi": "3.0.0",
  "info": {
    "title": "Flight Management API",
    "version": "100",
    "description": "API documentation for managing flights"
  },
  "servers": [
  {
    "url": "http://localhost:3000",
    "description": "Local development server"
  },
  {
    "url": "https://aeroloka-backend-development.up.railway.app",
    "description": "Production server"
  }
  ],
  "paths": {
    "/api/flights": {
      "get": {
        "tags": ["Flights"],
        "summary": "Get all flights",
        "description": "Retrieve a paginated list of flights",
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PageLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightResponse"
                }
              }
            }
          },
          "404": {
            "description": "No flights found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "No flights found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Flights"],
        "summary": "Create a flight",
        "description": "Add a new flight to the database",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Flight"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Flight created successfully",
            "content": {
              "application/json": {
                "schema": {
                      "$ref": "#/components/schemas/Flight"
                  }
                }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Invalid request body",
                  "data": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Unauthorized",
                  "data": null,
                  "redirectTo": "/api/login"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/{id}": {
      "get": {
        "tags": ["Flights"],
        "summary": "Get flight by ID",
        "description": "Retrieve a single flight by its ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlightResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid flight ID",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Invalid flight ID",
                  "data": null
                }
              }
            }
          },
          "404": {
            "description": "Flight with the specified ID not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "Flight not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Flights"],
        "summary": "Update flight",
        "description": "Update an existing flight",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Flight"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Flight updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flight"
                }
              }
            }
          },
          "400": {
            "description": "Invalid flight ID or request body",
            "content": {
              "application/json": {
                "examples": {
                  "ValidationError": {
                    "summary": "Invalid request body",
                    "value": {
                      "status": 400,
                      "message": "Invalid request body",
                      "data": null
                    }
                  },
                  "InvalidFlightID": {
                    "summary": "Invalid Flight ID",
                    "value": {
                      "status": 400,
                      "message": "Invalid flight ID",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Unauthorized",
                  "data": null,
                  "redirectTo": "/api/login"
                }
              }
            }
          },
          "404": {
            "description": "Flight not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "Flight not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Flights"],
        "summary": "Delete flight",
        "description": "Delete a flight by its ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Flight deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": 200,
                  "message": "Flight deleted successfully",
                  "data": null
                }
              }
            }
          },
          "400": {
            "description": "Invalid flight ID",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Invalid flight ID",
                  "data": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Unauthorized",
                  "data": null,
                  "redirectTo": "/api/login"
                }
              }
            }
          },
          "404": {
            "description": "Flight not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "Flight not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/booking": {
      "post": {
        "tags": ["Bookings"],
        "summary": "Create a booking",
        "description": "Add a new booking to the database",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booking created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Invalid request body",
                  "data": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Unauthorized",
                  "data": null,
                  "redirectTo": "/api/login"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "examples": {
                  "User not found": {
                    "summary": "User not found",
                    "value": {
                      "status": 404,
                      "message": "User not found",
                      "data": null
                    }
                  },
                  "Flight not found": {
                    "summary": "Flight not found",
                    "value": {
                      "status": 404,
                      "message": "Flight not found",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/booking/{userId}": {
      "get": {
        "tags": ["Bookings"],
        "summary": "Get bookings by user ID",
        "description": "Retrieve a list of bookings for a specific user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBookingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid from date format": {
                    "summary": "Invalid from date format",
                    "value": {
                      "status": 400,
                      "message": "Invalid from date format",
                      "data": null
                    }
                  },
                  "Invalid to date format": {
                    "summary": "Invalid to date format",
                    "value": {
                      "status": 400,
                      "message": "Invalid to date format",
                      "data": null
                    }
                  },
                  "From date cannot be after to date": {
                    "summary": "From date cannot be after to date",
                    "value": {
                      "status": 400,
                      "message": "From date cannot be after to date",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Unauthorized",
                  "data": null,
                  "redirectTo": "/api/login"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "User not found": {
                    "summary": "User not found",
                    "value": {
                      "status": 404,
                      "message": "User not found",
                      "data": null
                    }
                  },
                  "No bookings found": {
                    "summary": "No bookings found",
                    "value": {
                      "status": 404,
                      "message": "No bookings found for this user",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/search-flights": {
      "get": {
        "tags": ["Search and Filter Flights"],
        "summary": "Search for flights",
        "description": "Retrieve a list of flights based on search criteria",
        "parameters": [
          {
            "$ref": "#/components/parameters/Criteria"
          },
          {
            "$ref": "#/components/parameters/Value"
          },
          {
            "$ref": "#/components/parameters/Filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Flights retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flight"
                }
              }
            }
          },
          "400": {
            "description": "Invalid criteria or filter provided",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid criteria": {
                    "summary": "Invalid criteria",
                    "value": {
                      "status": 400,
                      "message": "Invalid criteria",
                      "data": null
                    }
                  },
                  "Invalid filter": {
                    "summary": "Invalid filter",
                    "value": {
                      "status": 400,
                      "message": "Invalid filter",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No flights found matching the criteria or filter",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "No flights found matching the criteria or filter",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register user",
        "description": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "User email already exists",
            "content": {
              "application/json": {
                "examples": {
                  "User already exists": {
                    "summary": "User already exists",
                    "value": {
                      "status": 400,
                      "message": "User already exists",
                      "data": null
                    }
                  },
                  "Bad request": {
                    "summary": "Bad request",
                    "value": {
                      "status": 400,
                      "message": "Error message",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error generating token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/verify-otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify OTP",
        "description": "Verify OTP",
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyOTPResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid or expired token": {
                    "summary": "Invalid or expired token",
                    "value": {
                      "status": 400,
                      "message": "Invalid or expired token",
                      "data": null
                    }
                  },
                  "Expired OTP": {
                    "summary": "Expired OTP",
                    "value": {
                      "status": 400,
                      "message": "OTP has expired",
                      "data": null
                    }
                  },
                  "Invalid OTP": {
                    "summary": "Invalid OTP",
                    "value": {
                      "status": 400,
                      "message": "Invalid OTP",
                      "data": null
                    }
                  },
                  "Bad request": {
                    "summary": "Bad request",
                    "value": {
                      "status": 400,
                      "message": "Error message",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Error verifying OTP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/resend-otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend OTP",
        "description": "Resend OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendOTPResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "examples": {
                  "User is already active": {
                    "summary": "User is already active",
                    "value": {
                      "status": 400,
                      "message": "User is already active",
                      "data": null
                    }
                  },
                  "Bad request": {
                    "summary": "Bad request",
                    "value": {
                      "status": 400,
                      "message": "Error message",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Error resending OTP",
            "content": {
              "application/json": {
                "examples": {
                  "Error generating token": {
                    "summary": "Error generating token",
                    "value": {
                      "status": 500,
                      "message": "Error generating token",
                      "data": null
                    }
                  },
                  "Error resending OTP": {
                    "summary": "Error resending OTP",
                    "value": {
                      "status": 500,
                      "message": "Error resending OTP",
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "description": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Invalid email or password",
                  "data": null
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Invalid credentials",
                  "data": null
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Error generating token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/forget-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Forget password",
        "description": "Forget password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailForgetPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset link sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailForgetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Invalid email",
                  "data": null
                }
              }
            }
          },
          "403": {
            "description": "User is not active",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "User is not active. Please verify your email first.",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Error sending password reset link",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/reset-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset password",
        "description": "Reset password",
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "examples": {
                  "Password do not match": {
                    "summary": "Password do not match",
                    "value": {
                      "status": 400,
                      "message": "Password do not match",
                      "data": null
                    }
                  },
                  "Bad request": {
                    "summary": "Bad request",
                    "value": {
                      "status": 400,
                      "message": "Error message",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Unauthorized",
                  "data": null
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "description": "Get all users",
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Error retrieving users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user by Email",
        "description": "Update user by Email",
        "parameters": [
          {
            "$ref": "#/components/parameters/Email"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Error updating user",
            "content": {
              "application/json": {
                "examples": {
                  "Email query parameter is required": {
                    "summary": "Email query parameter is required",
                    "value": {
                      "status": 400,
                      "message": "Email query parameter is required",
                      "data": null
                    }
                  },
                  "Bad request": {
                    "summary": "Bad request",
                    "value": {
                      "status": 400,
                      "message": "Error message",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error updating user",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "Error updating user",
                  "data": null
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user by Email",
        "description": "Delete user by Email",
        "parameters": [
          {
            "$ref": "#/components/parameters/Email"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": 200,
                  "message": "User deleted successfully",
                  "data": null
                }
              }
            }
          },
          "400": {
            "description": "Email query parameter is required",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Email query parameter is required",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Error deactivating user",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "Error deactivating user",
                  "error": "Error message"
                }
              }
            }
          }
        }
      }
    },
    
    "/api/users/email": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by Email",
        "description": "Get user by Email",
        "parameters": [
          {
            "$ref": "#/components/parameters/Email"
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Email query parameter is required",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Email query parameter is required",
                  "data": null
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User not found",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Error retrieving user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "Criteria": {
        "name": "criteria",
        "in": "query",
        "description": "The search criterion to filter flights",
        "required": false,
        "schema": {
          "type": "string",
          "enum": ["benua", "kelas", "kota", "negara"]
        }
      },
      "Filter": {
        "name": "filter",
        "in": "query",
        "description": "The filter to apply to the flights",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "harga-termurah",
            "harga-termahal",
            "durasi-terpendek",
            "durasi-terpanjang",
            "keberangkatan-paling-awal",
            "keberangkatan-paling-akhir",
            "kedatangan-paling-awal",
            "kedatangan-paling-akhir"
          ]
        }
      },
      "Value": {
        "name": "value",
        "in": "query",
        "description": "The value to filter the flights",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "Page": {
        "name": "limit",
        "in": "query",
        "description": "Number of flights per page",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 10
        }
      },
      "PageLimit":{
        "name": "page",
        "in": "query",
        "description": "Page number",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "Token": {
        "name": "token",
        "in": "query",
        "description": "The Token code",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Id": {
        "name": "id",
        "in": "path",
        "description": "ID",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "Email": {
        "name": "email",
        "in": "query",
        "description": "Email",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "googleId": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "Airline": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Airport": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cityId": {
            "type": "integer"
          },
          "terminal": {
            "type": "string"
          },
          "continent": {
            "type": "string"
          }
        }
      },
      "OriginCity": {
        "type": "object",
        "properties": {
          "shortname": {
            "type": "string"
          },
          "fullname": {
            "type": "string"
          }
        }
      },
      "DestinationCity": {
        "type": "object",
        "properties": {
          "shortname": {
            "type": "string"
          },
          "fullname": {
            "type": "string"
          }
        }
      },
      "Flight": {
        "type": "object",
        "properties": {
          "airlinesId": {
            "type": "integer"
          },
          "airportId": {
            "type": "integer"
          },
          "originCityId": {
            "type": "integer"
          },
          "destinationCityId": {
            "type": "integer"
          },
          "departure": {
            "type": "string",
            "format": "date-time"
          },
          "return": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "capacity": {
            "type": "integer"
          },
          "class": {
            "type": "string"
          },
          "information": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          }
        },
        "required": [
          "airlinesId",
          "airportId",
          "originCityId",
          "destinationCityId",
          "departure",
          "price",
          "capacity",
          "class"
        ]
      },
      "FlightResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flight"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              },
              "page": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              },
              "totalPages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "GetFlightResponse": {
      "type": "object",
      "allOf": [
        { "$ref": "#/components/schemas/Flight" },
        {
          "type": "object",
          "properties": {
            "airlines": { "$ref": "#/components/schemas/Airline" },
            "airport": { "$ref": "#/components/schemas/Airport" },
            "originCity": { "$ref": "#/components/schemas/OriginCity" },
            "destinationCity": { "$ref": "#/components/schemas/DestinationCity" }
          }
        }
      ]
      },
      "Booking": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "flightId": {
            "type": "integer"
          },
          "totalPrice": {
            "type": "number",
            "format": "float"
          },
          "passengers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Passenger"
            }
          },
          "seats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Seat"
            }
          }
        },
        "required": [
          "email",
          "flightId",
          "totalPrice",
          "passengers",
          "seats"
        ]
      },
      "BookingsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "bookingId": {
            "type": "integer"
          },
          "totalPrice": {
            "type": "number",
            "format": "float"
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalPassenger": {
            "type": "integer"
          },
          "seats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Seat"
            }
          },
          "passengers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Passenger"
            }
          }
        }
      },
      "GetBookingsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "flightId": {
            "type": "integer"
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalPrice": {
            "type": "number",
            "format": "float"
          },
          "totalPassenger": {
            "type": "integer"
          },
          "flight": {
            "$ref": "#/components/schemas/Flight"
          },
          "passengers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "bookingId": {
                  "type": "integer"
                },
                "passengersId": {
                  "type": "integer"
                },
                "seatId": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "Passenger": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "nationality": {
            "type": "string"
          },
          "passportNumber": {
            "type": "string"
          },
          "passportExpiry": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Seat": {
            "type": "string"
      },
      "Register": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "otpToken": {
            "type": "string"
          }
        }
      },
      "VerifyOTP": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string"
          }
        }
      },
      "VerifyOTPResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResendOTP": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResendOTPResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "SendEmailForgetPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "SendEmailForgetPasswordResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          }
        }
      },
      "ResetPasswordResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
            }
          }
        }
      },
      "500": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Internal Server Error"
          },
          "data": {
            "type": "object",
            "nullable": true,
            "example": null
          }
        }
      }
    }
  }
}
